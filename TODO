Query Parsing Refactoring
x move Xapit::Query query parsing into SimpleQueryParser (it should just be a wrapper)
x create ClassicQueryParser which uses the Xapian::QueryParser
x move duplicates into AbstractQueryParser
- add some options to Xapit::Query (such as default limit) to clean up collection class (move to parser)
- add :query_parser option to Xapit::Config.setup passing class, default to simple query parser initially
- try moving default to classic query parser

Indexing
+ re-indexing support for new/changed models (?)
+ auto-reload xapian database in memory if database recently indexed

Finding
- stemming (support alternate languages)
? support non-ascii characters in find (å, ä, ö)
+ range in conditions
+ customize query parser
+ parenthesis to group phrases
+ support "age:17" condition matching in query
+ add classes option to Xapit.search to limit which classes are included
+ support @collection.facets on Xapit.search (multiple classes)
+ support :order option for Xapit.search (multiple classes)

Facets
+ sort facet options
+ handle unique id collision gracefully

Performance
- benchmark indexing
- multiple id finds in a single query

Other
- turn into Ruby Gem with clear instructions on requirements
+ remove dependency on active_support
